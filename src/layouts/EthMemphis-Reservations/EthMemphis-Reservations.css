
 html, body {
  background: ;
  overflow: scroll;
  width: 100%;
  height: 100%;
}

.view {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  -webkit-perspective: 400;
          perspective: 400;
}

.plane {
  width: 120px;
  height: 120px;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}
.plane.main {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  -webkit-transform: rotateX(60deg) rotateZ(-30deg);
          transform: rotateX(60deg) rotateZ(-30deg);
  -webkit-animation: rotate 20s infinite linear;
          animation: rotate 20s infinite linear;
}
.plane.main .circle {
  width: 120px;
  height: 120px;
  position: absolute;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  border-radius: 100%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-box-shadow: 0 0 60px crimson, inset 0 0 60px crimson;
          box-shadow: 0 0 60px crimson, inset 0 0 60px crimson;
}
.plane.main .circle::before, .plane.main .circle::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  width: 10%;
  height: 10%;
  border-radius: 100%;
  background: crimson;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-box-shadow: 0 0 60px 2px crimson;
          box-shadow: 0 0 60px 2px crimson;
}
.plane.main .circle::before {
  -webkit-transform: translateZ(-90px);
          transform: translateZ(-90px);
}
.plane.main .circle::after {
  -webkit-transform: translateZ(90px);
          transform: translateZ(90px);
}
.plane.main .circle:nth-child(1) {
  -webkit-transform: rotateZ(72deg) rotateX(63.435deg);
          transform: rotateZ(72deg) rotateX(63.435deg);
}
.plane.main .circle:nth-child(2) {
  -webkit-transform: rotateZ(144deg) rotateX(63.435deg);
          transform: rotateZ(144deg) rotateX(63.435deg);
}
.plane.main .circle:nth-child(3) {
  -webkit-transform: rotateZ(216deg) rotateX(63.435deg);
          transform: rotateZ(216deg) rotateX(63.435deg);
}
.plane.main .circle:nth-child(4) {
  -webkit-transform: rotateZ(288deg) rotateX(63.435deg);
          transform: rotateZ(288deg) rotateX(63.435deg);
}
.plane.main .circle:nth-child(5) {
  -webkit-transform: rotateZ(360deg) rotateX(63.435deg);
          transform: rotateZ(360deg) rotateX(63.435deg);
}

@-webkit-keyframes rotate {
  0% {
    -webkit-transform: rotateX(0) rotateY(0) rotateZ(0);
            transform: rotateX(0) rotateY(0) rotateZ(0);
  }
  100% {
    -webkit-transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
            transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
}

@keyframes rotate {
  0% {
    -webkit-transform: rotateX(0) rotateY(0) rotateZ(0);
            transform: rotateX(0) rotateY(0) rotateZ(0);
  }
  100% {
    -webkit-transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
            transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
}

@media screen and (min-width: 1326px){
  .Container {
    background-color: gray;
    display: grid;
    grid-template-columns: repeat(3, 2fr);
    gridAutoRow: '60px 60px 60px';
    gridAutoColumn: '90px 90px 90px';
    gridAutoFlow: 'row';
    alignItems: 'start';
    justifyItems: '';
    gridTemplateAreas: '';
    alignContent: 'center';
  }
}

@media screen and (max-width: 1325px) and (min-width: 911px) {
    .Container {
        background-color: lavender;
        display: grid;
        grid-template-columns: repeat(2, 2fr);
        gridAutoRow: '60px 60px 60px';
        gridAutoColumn: '90px 90px 90px';
        gridAutoFlow: 'row';
        alignItems: 'start';
        justifyItems: '';
        gridTemplateAreas: '';
        alignContent: 'center';
    }
}


@media screen and (max-width: 910px) {
  .Container {
    background-color: lightgreen;
    display: grid;
    grid-template-columns:  2fr;
    gridAutoRow: '60px 60px 60px';
    gridAutoColumn: '90px 90px 90px';
    gridAutoFlow: 'row';
    alignItems: 'start';
    justifyItems: '';
    gridTemplateAreas: '';
    alignContent: 'center';
  }
}

@keyframes stretch {

}
  .Container {

}
.element {
  animation-name: stretch;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
  animation-delay: 0s;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-fill-mode: none;
  animation-play-state: running;
}

/*
  is the same as:
*/

.element {
  animation:
    stretch
    1.5s
    ease-out
    0s
    alternate
    infinite
    none
    running;
}
